server_tokens off; # for security-by-obscurity: stop displaying nginx version

# this section is needed to proxy web-socket connections
map $http_upgrade $connection_upgrade {
	default upgrade;
	''      close;
}

server {
	listen 80 default_server; # if this is not a default server, remove "default_server"
	listen [::]:80 default_server ipv6only=on;

	server_name www.dayoff.site fellow.dayoff.site test.dayoff.site fellow.test.dayoff.site;

	index index.html index.htm;

	location / {
		root /usr/share/nginx/html;
	}
}

# HTTPS server
server {
	listen 443 ssl spdy; # TODO: http2
	server_name test.dayoff.site fellow.test.dayoff.site; # this domain must match Common Name (CN) in the SSL certificate

	ssl_certificate /etc/letsencrypt/live/test.dayoff.site/fullchain.pem; # full path to SSL certificate and CA certificate concatenated together
	ssl_certificate_key /etc/letsencrypt/live/test.dayoff.site/privkey.pem; # full path to SSL key

	# performance enhancement for SSL
	ssl_stapling on;
	ssl_session_cache shared:SSL:10m;
	ssl_session_timeout 5m;

	# safety enhancement to SSL: make sure we actually use a safe cipher
	ssl_prefer_server_ciphers on;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK';

	# config to enable HSTS(HTTP Strict Transport Security) https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
	# to avoid ssl stripping https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
	add_header Strict-Transport-Security "max-age=31536000;";

	# pass all requests to Meteor
	location / {
		proxy_pass http://127.0.0.1:3000;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade; # allow websockets
		proxy_set_header Connection $connection_upgrade;
		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For $remote_addr; # preserve client IP
		proxy_set_header X-Forwarded-Proto https;

		# this setting allows the browser to cache the application in a way compatible with Meteor
		# on every applicaiton update the name of CSS and JS file is different, so they can be cache infinitely (here: 30 days)
		# the root path (/) MUST NOT be cached
		if ($uri != '/') {
			expires 30d;
		}
	}
}

# HTTPS server
server {
	listen 443 ssl spdy; # TODO: http2
	server_name www.dayoff.site fellow.dayoff.site; # this domain must match Common Name (CN) in the SSL certificate

	ssl_certificate /etc/letsencrypt/live/www.dayoff.site/fullchain.pem; # full path to SSL certificate and CA certificate concatenated together
	ssl_certificate_key /etc/letsencrypt/live/www.dayoff.site/privkey.pem; # full path to SSL key

	# performance enhancement for SSL
	ssl_stapling on;
	ssl_session_cache shared:SSL:10m;
	ssl_session_timeout 5m;

	# safety enhancement to SSL: make sure we actually use a safe cipher
	ssl_prefer_server_ciphers on;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK';

	# config to enable HSTS(HTTP Strict Transport Security) https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
	# to avoid ssl stripping https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
	add_header Strict-Transport-Security "max-age=31536000;";

	# pass all requests to Meteor
	location / {
		proxy_pass http://127.0.0.1:4000;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade; # allow websockets
		proxy_set_header Connection $connection_upgrade;
		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For $remote_addr; # preserve client IP
		proxy_set_header X-Forwarded-Proto https;

		# this setting allows the browser to cache the application in a way compatible with Meteor
		# on every applicaiton update the name of CSS and JS file is different, so they can be cache infinitely (here: 30 days)
		# the root path (/) MUST NOT be cached
		if ($uri != '/') {
			expires 30d;
		}
	}
}
